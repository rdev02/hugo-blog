<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C# on Nomad&#39;s reflections</title>
    <link>http://localhost:1313/tags/c%23/</link>
    <description>Recent content in C# on Nomad&#39;s reflections</description>
    <image>
      <title>Nomad&#39;s reflections</title>
      <url>https://s3-us-west-2.amazonaws.com/vnomad-public/blog_infra/wp_back3.jpg</url>
      <link>https://s3-us-west-2.amazonaws.com/vnomad-public/blog_infra/wp_back3.jpg</link>
    </image>
    <generator>Hugo -- 0.127.0</generator>
    <language>en</language>
    <copyright>Viktor Halitsyn</copyright>
    <lastBuildDate>Sat, 12 Dec 2009 23:11:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/c%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating dynamic plugin architecture with C#.NET</title>
      <link>http://localhost:1313/posts/code/creating-dynamic-plugin-architecture-with-c-net/</link>
      <pubDate>Sat, 12 Dec 2009 23:11:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/code/creating-dynamic-plugin-architecture-with-c-net/</guid>
      <description>There are a few articles on the web describing how to load assemblies using reflection, thus allowing you to execute third-party code inside your own application. While applicable in most cases, my customer wanted those plugins to be replaceable on-the-fly. Keep mind that once an assembly has been loaded into an application domain it cannot be unloaded unless you unload the domain(which is you main app domain by default)=close the application.</description>
    </item>
  </channel>
</rss>
