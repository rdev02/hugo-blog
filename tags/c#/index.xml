<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Nomad&#39;s reflections</title>
    <link>blog.vnomad.com/tags/c#/</link>
    <description>Recent content in C# on Nomad&#39;s reflections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Dec 2009 23:11:00 +0000</lastBuildDate>
    
	<atom:link href="blog.vnomad.com/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating dynamic plugin architecture with C#.NET</title>
      <link>blog.vnomad.com/code/creating-dynamic-plugin-architecture-with-c-net/</link>
      <pubDate>Sat, 12 Dec 2009 23:11:00 +0000</pubDate>
      
      <guid>blog.vnomad.com/code/creating-dynamic-plugin-architecture-with-c-net/</guid>
      <description>There are a few articles on the web describing how to load assemblies using reflection, thus allowing you to execute third-party code inside your own application. While applicable in most cases, my customer wanted those plugins to be replaceable on-the-fly. Keep mind that once an assembly has been loaded into an application domain it cannot be unloaded unless you unload the domain(which is you main app domain by default)=close the application.</description>
    </item>
    
  </channel>
</rss>